plugins {
    id 'io.freefair.lombok' version '4.1.6' apply false
    id 'org.springframework.boot' version '2.2.4.RELEASE' apply false
    id 'com.jfrog.bintray' version '1.8.4' apply false
}

ext {
    javaProjects = [ project(':users-api'), project(':users-client'), project(':users-service') ]
    uploadProjects = [ project(':platform'), project(':users-api'), project(':users-client') ]
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://repo.spring.io/libs-snapshot' }
    }
    group = 'net.plshark.users'
    version = '0.1.0'
}

configure(javaProjects) { project ->
    apply plugin: 'groovy'
    apply plugin: 'jacoco'
    apply plugin: 'io.freefair.lombok'

    generateLombokConfig.enabled = false

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        withSourcesJar()
    }

    compileJava.options.compilerArgs.add '-parameters'
    compileTestJava.options.compilerArgs.add '-parameters'

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled false
            csv.enabled false
        }
        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: [
                        '**/WebSecurityConfig.class'
                ])
            }))
        }
    }
}

configure(uploadProjects) { project ->
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'maven-publish'

    bintray {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_API_KEY')
        publish = true
        override = false
        publications = ['maven']
        pkg {
            repo = 'maven'
            name = 'net.plshark.users'
            userOrg = 'twinklehawk'
            licenses = ['Apache-2.0']
            websiteUrl = 'https://github.com/twinklehawk/bad-users'
            vcsUrl = 'https://github.com/twinklehawk/bad-users.git'
            githubRepo = 'twinklehawk/bad-users'
            version {
                name = project.version
            }
        }
    }
}

configure(uploadProjects - project(':platform')) { project ->
    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }
    }
}
