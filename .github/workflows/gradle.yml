name: Java CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        java_version: ['1.8', '1.11']
    steps:
    - uses: actions/checkout@v1
    - name: Restore cache
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java_version }}
    - name: Initialize code coverage upload
        if: matrix.java_version == '1.11'
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_REPORTER_ID }}
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
    - name: Build with Gradle
      run: ./gradlew build jacocoTestReport
    - name: Upload coverage
      if: matrix.java_version == '1.11'
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_REPORTER_ID }}
      run: |
        for f in */build/reports/jacoco/test/jacocoTestReport.xml
        do
          ./cc-test-reporter format-coverage -t jacoco -o build/coverage/codeclimate-${f%/build/reports/jacoco/test/jacocoTestReport.xml}.json $f
        end
        ./cc-test-reporter sum-coverage build/coverage/codeclimate-*.json -o build/coverage/codeclimate-total.json
        ./cc-test-reporter upload-coverage -i build/coverage/codeclimate-total.json
