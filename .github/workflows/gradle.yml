name: Java CI

on:
  pull_request:
    branches: master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        java_version: ['1.8', '1.11']
    steps:
    - uses: actions/checkout@v1
    - name: Restore cache
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java_version }}
    - name: Build and test
      run: ./gradlew build jacocoTestReport
    - name: Upload test coverage
      if: matrix.java_version == '1.11'
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_REPORTER_ID }}
        GIT_COMMIT_SHA: ${{ github.sha }}
        GIT_BRANCH: ${{ github.head_ref }}
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter
        ./cc-test-reporter before-build
        for f in */build/reports/jacoco/test/jacocoTestReport.xml
        do
          PROJECT=${f%/build/reports/jacoco/test/jacocoTestReport.xml}
          JACOCO_SOURCE_PATH=$PROJECT/src/main/java ./cc-test-reporter format-coverage -t jacoco -o build/coverage/codeclimate-$PROJECT.json $f
        done
        ./cc-test-reporter sum-coverage build/coverage/codeclimate-*.json -o build/coverage/codeclimate-total.json
        ./cc-test-reporter upload-coverage -i build/coverage/codeclimate-total.json
