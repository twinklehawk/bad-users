# disable the spring startup banner when running as an executable
spring.main.banner-mode=off

# URL for flyway to use to connect to the database
spring.flyway.url=jdbc:postgresql://db:5432/postgres
# username to connect to the database for migrations
spring.flyway.user=postgres
# password to connect to the database for migrations
spring.flyway.password=test-pass
# schema to use for bad-users data, should match the value of spring.flyway.placeholders.schema
spring.flyway.schemas=users
# schema to use for bad-users data, should match the value of spring.flyway.schemas
spring.flyway.placeholders.schema=users
# username to connect to the database for normal operation
spring.flyway.placeholders.username=badusers
# password to connect to the database for normal operation
spring.flyway.placeholders.password=users-service-pass
# migration script location
spring.flyway.locations=classpath:db/migration/postgres
# number of times to try to reconnect to run migrations
spring.flyway.connect-retries=30

# R2DBC URL for the database connection
spring.r2dbc.url=r2dbc:postgresql://db:5432/postgres?schema=users
spring.r2dbc.username=badusers
spring.r2dbc.password=users-service-pass

# context path that bad-users will listen on
#spring.servlet.context-path=

# algorithm used to sign JWTs
auth.algorithm=ecdsa256
# issuer to set and require on JWTs
auth.issuer=test-users-service
# location of the keystore for the key to use to generate and validate JWTs
auth.keystore.location=config/test-auth.jks
# password to access the keystore for the key to use to generate and validate JWTs
auth.keystore.password=test-pass
# name of the key in the keystore to use to generate and validate JWTs
auth.key.alias=test-auth
# password for the key in the keystore to use to generate and validate JWTs
auth.key.password=test-pass

